name: Build Plugin

on:
  push:
    branches: [main]
    paths:
      - "plugin/**"
  pull_request:
    branches: [main]
    paths:
      - "plugin/**"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - uses: actions/checkout@v5

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Build with Gradle Wrapper
        working-directory: plugin
        run: ./gradlew build

      - name: Upload Plugin JAR file
        uses: actions/upload-artifact@v4
        with:
          name: mc-id-plugin
          path: plugin/build/libs/mc-id-auth-*-all.jar
          compression-level: 0

  release:
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
    # Only create releases on pushes to main, not on PRs
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0 # Needed for semantic release

      - name: Set up JDK
        uses: actions/setup-java@v5
        with:
          java-version: 17
          distribution: temurin

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v5

      - name: Determine next version
        id: version
        uses: cycjimmy/semantic-release-action@v5
        with:
          dry_run: true
          semantic_version: 23
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build with new version
        if: steps.version.outputs.new_release_published == 'true'
        working-directory: plugin
        env:
          RELEASE_VERSION: ${{ steps.version.outputs.new_release_version }}
        run: ./gradlew build

      - name: Copy JAR with generic name
        if: steps.version.outputs.new_release_published == 'true'
        working-directory: plugin
        run: |
          cp build/libs/mc-id-auth-*-all.jar build/libs/mc-id-auth-latest.jar
          ls -la build/libs/

      - name: Create Release
        if: steps.version.outputs.new_release_published == 'true'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.new_release_version }}
          name: Plugin Release v${{ steps.version.outputs.new_release_version }}
          body: ${{ steps.version.outputs.new_release_notes }}
          files: |
            plugin/build/libs/mc-id-auth-*-all.jar
            plugin/build/libs/mc-id-auth-latest.jar
          draft: false
          prerelease: false
